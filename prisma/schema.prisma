// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id           Int           @id @default(autoincrement())
  name         String
  headcount    Int
  scores       TeamScore[]
  users        User[]
  reservations Reservation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model GameSession {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  teamScores  TeamScore[]
  userScores  UserScore[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model User {
  id         Int         @id @default(autoincrement())
  name       String
  teamId     Int
  team       Team        @relation(fields: [teamId], references: [id])
  userScores UserScore[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([teamId])
}

model TeamScore {
  id            Int          @id @default(autoincrement())
  teamId        Int
  score         Int
  gameSessionId Int?
  team          Team         @relation(fields: [teamId], references: [id])
  gameSession   GameSession? @relation(fields: [gameSessionId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@index([teamId])
  @@index([gameSessionId])
}

model UserScore {
  id            Int          @id @default(autoincrement())
  userId        Int
  score         Int
  gameSessionId Int?
  user          User         @relation(fields: [userId], references: [id])
  gameSession   GameSession? @relation(fields: [gameSessionId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@index([userId])
  @@index([gameSessionId])
}

model Reservation {
  id             Int      @id @default(autoincrement())
  teamId         Int
  receiptNumber  String
  numberOfPeople Int
  startTime      DateTime
  endTime        DateTime
  team           Team     @relation(fields: [teamId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([teamId])
}
