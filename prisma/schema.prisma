generator client {
  provider = "prisma-client-js"
}

/*
generator erd {
  provider                  = "prisma-erd-generator"
  output                    = "ERD.md"
  includeRelationFromFields = "true"
  theme                     = "forest"
}
*/

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TimeSlot {
  id          Int          @id @default(autoincrement())
  slotTime    DateTime     @unique
  slotType    SlotType
  status      SlotStatus   @default(AVAILABLE)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  reservation Reservation?
}

model Reservation {
  id         Int       @id @default(autoincrement())
  startTime  DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  timeSlotId Int?      @unique
  lineUserId String?
  timeSlot   TimeSlot? @relation(fields: [timeSlotId], references: [id])

  @@index([timeSlotId])
  @@index([lineUserId])
}

model TeamScore {
  id              Int           @id @default(autoincrement())
  teamName        String
  headcount       Int
  gameSessionName String
  description     String?
  score           Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  playerScores    PlayerScore[]

  @@index([teamName])
  @@index([gameSessionName])
}

model PlayerScore {
  id            Int        @id @default(autoincrement())
  playerName    String
  score         Int
  team_score_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  teamScore     TeamScore  @relation(fields: [team_score_id], references: [id], onDelete: Cascade)

  @@index([playerName])
  @@index([team_score_id])
}

enum SlotType {
  RESERVABLE
  WALK_IN
}

enum SlotStatus {
  AVAILABLE
  BOOKED
}
